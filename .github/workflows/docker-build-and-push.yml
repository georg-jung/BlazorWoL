name: Docker Build and Push

on:
  workflow_call:
    inputs:
      dockerfile:
        required: true
        type: string
      build-args:
        required: false
        type: string
      push:
        required: true
        type: boolean
      build-ref:
        required: false
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: georg-jung/blazorwol # ${{ github.repository }} would be georg-jung/BlazorWoL

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
        ref: ${{ inputs.build-ref }}
    - uses: dotnet/nbgv@v0.4
      id: nbgv
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for docker image
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        # type=semver extracts git tag information
        # see https://github.com/marketplace/actions/docker-metadata-action#typesemver
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}},value=${{ steps.nbgv.outputs.SemVer2 }}
          type=semver,pattern={{major}}.{{minor}},value=${{ steps.nbgv.outputs.SemVer2 }}
          type=sha
          type=semver,pattern={{version}},value=${{ inputs.build-ref }}
          type=semver,pattern={{major}}.{{minor}},value=${{ inputs.build-ref }}
          type=raw,value=latest
    - name: Build and push container image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        build-args: ${{ inputs.build-args }}
        builder: ${{ steps.buildx.outputs.name }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
